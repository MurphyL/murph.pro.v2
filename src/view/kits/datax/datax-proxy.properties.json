{
    "MySQL": {
        "props": {
            "jdbcUrl": {
                "memo": "目标数据库的JDBC连接信息，使用JSON的数组描述，并支持一个库填写多个连接地址。",
                "required": true
            },
            "username": {
                "memo": "数据源的用户名。",
                "required": true
            },
            "password": {
                "memo": "数据源指定用户名的密码。",
                "required": true
            },
            "table": {
                "memo": "所选取的需要同步的表。使用JSON的数组描述，因此支持多张表同时抽取。",
                "required": true
            },
            "column": {
                "memo": "所配置的表中需要同步的列名集合，使用JSON的数组描述字段信息。",
                "required": true
            }
        },
        "reader": {
            "name": "mysqlreader",
            "props": {
                "splitPk": {
                    "memo": "支持整形数据切分。",
                    "required": true
                },
                "where": {
                    "memo": "筛选条件，where条件可以有效地进行业务增量同步。"
                },
                "querySql": {
                    "memo": "在有些业务场景下，where这一配置项不足以描述所筛选的条件，用户可以通过该配置型来自定义筛选SQL。"
                }
            }
        },
        "writer": {
            "name": "mysqlwriter",
            "props": {
                "preSql": {
                    "memo": "写入数据到目的表前，会先执行这里的标准语句。如果 Sql 中有你需要操作到的表名称，请使用 @table 表示，这样在实际执行 Sql 语句时，会对变量按照实际表名称进行替换。"
                },
                "postSql": {
                    "memo": "写入数据到目的表后，会执行这里的标准语句。（原理同 preSql ）"
                },
                "writeMode": {
                    "memo": "控制写入数据到目标表采用 insert into 或者 replace into 或者 ON DUPLICATE KEY UPDATE 语句。",
                    "defaultValue": "insert",
                    "enum": [
                        "insert",
                        "replace",
                        "update"
                    ]
                },
                "batchSize": {
                    "memo": "一次性批量提交的记录数大小，该值可以极大减少DataX与Mysql的网络交互次数，并提升整体吞吐量。",
                    "defaultValue": 1024
                }
            }
        }
    },
    "HDFS": {
        "props": {
            "path": {
                "memo": "要读取的文件路径。",
                "required": true
            },
            "defaultFS": {
                "memo": "Hadoop HDFS 文件系统 namenode 节点地址。",
                "required": true
            },
            "fieldDelimiter": {
                "memo": "分隔符"
            }
        },
        "reader": {
            "name": "hdfsreader",
            "props": {
                "fileType": {
                    "memo": "文件的类型。"
                }
            }
        },
        "writer": {
            "name": "hdfswriter",
            "props": {
                "writeMode": {
                    "memo": "清理模式。",
                    "enum": [
                        "append",
                        "nonConflict"
                    ]
                }
            }
        }
    },
    "ElasticSearch": {
        "props": {
            "endpoint": {
                "memo": "连接地址",
                "required": true
            },
            "index": {
                "memo": "索引名称",
                "required": true
            },
            "type": {
                "memo": "索引 type",
                "required": true
            },
            "timeout": {
                "memo": "客户端超时时间"
            }
        },
        "writer": {
            "name": "elasticsearchwriter"
        }
    },
    "MongoDB": {
        "props": {
            "address": {
                "memo": "数据地址",
                "type": "array",
                "required": true
            },
            "collectionName": {
                "memo": "集合名",
                "required": true
            },
            "column": {
                "memo": "文档列名。内部字段：name、type",
                "required": true
            },
            "userName": {
                "memo": "用户名"
            },
            "userPassword": {
                "memo": "密码"
            }
        },
        "reader": {
            "name": "mongodbreader"
        },
        "writer": {
            "name": "mongodbwriter"
        }
    }
}